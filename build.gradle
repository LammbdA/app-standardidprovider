plugins {
    id 'java'
    id 'maven-publish'
    id 'com.enonic.defaults' version '2.0.0'
    id 'com.enonic.xp.app' version '1.1.0'
    id 'com.moowork.node' version '1.2.0'
}

apply from: "$rootDir/gradle/defaults.gradle"

app {
    name = 'com.enonic.xp.app.standardidprovider'
    group = 'com.enonic.xp'
    displayName = 'Standard ID Provider'
    systemVersion = "${xpVersion}"
    systemApp = true
}

dependencies {
    include "${group}:lib-admin:${xpVersion}"
    include "${group}:lib-auth:${xpVersion}"
    include "${group}:lib-context:${xpVersion}"
    include "${group}:lib-portal:${xpVersion}"
    include "${group}:lib-node:${xpVersion}"
    include "com.enonic.lib:lib-mustache:2.0.0-A1"
}

node {
    version = '8.10.0'
    download = true
}

task npmInstallForce( type: NpmTask ) {
    description = 'Update all project node dependencies'
    args = [ 'install', '--force' ]
}

task lint( type: NpmTask, dependsOn: npmInstall ) {
    args = [ 'run', 'lint' ]
    inputs.files fileTree( dir: 'modules', include: '**/src/main/**.*' )
    outputs.dir file('gradle')
    outputs.upToDateWhen { false }
}

task webpack( type: NodeTask, dependsOn: lint ) {
    environment = [ 'NODE_ENV': nodeEnvironment() ]
    description = 'Build UI resources (js, css, etc).'
    inputs.dir 'src/main'
    outputs.dir "$buildDir/resources/main"
    script = file( './node_modules/webpack/bin/webpack' )
}

task cleanNode( type: Delete ) {
    delete 'node_modules'
}

jar {
    def mainDir = file('build/resources/main')

    exclude 'assets/**/*.less'

    fileTree("$mainDir/assets/js") {
        exclude '_all.js'
    }.each { f -> exclude mainDir.toURI().relativize( file( f.path ).toURI() ).toString() }

    dependsOn += webpack
}

jar.outputs.dir "${buildDir}/resources/main"

def nodeEnvironment() {
    def environments = [ prod : 'production', dev: 'development' ]
    def nodeEnv = environments[hasProperty( 'env' ) ? env : 'prod']
    return nodeEnv != null ? nodeEnv : 'production'
}
